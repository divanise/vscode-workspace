#!/usr/bin/bash

set -euo pipefail

# Based on https://github.com/apple/swift-docker/blob/main/5.10/ubuntu/24.04/Dockerfile

WORK_DIR="$(mktemp -d)"
pushd "${WORK_DIR}"

apt-get install -y --no-install-recommends \
    binutils \
    gnupg2 \
    libc6-dev \
    libcurl4-openssl-dev \
    libedit2 \
    libgcc-13-dev \
    libncurses-dev \
    libpython3-dev \
    libsqlite3-0 \
    libstdc++-13-dev \
    libxml2-dev \
    libz3-dev \
    zlib1g-dev

SWIFT_SIGNING_KEY=A62AE125BBBFBB96A6E042EC925CC1CCED3D1561
SWIFT_PLATFORM=ubuntu24.04
SWIFT_BRANCH=swift-5.10.1-release
SWIFT_VERSION=swift-5.10.1-RELEASE
SWIFT_WEBROOT=https://download.swift.org

ARCH_NAME="$(dpkg --print-architecture)"
url=;
case "${ARCH_NAME##*-}" in
    'amd64')
        OS_ARCH_SUFFIX='';
        ;;
    'arm64')
        OS_ARCH_SUFFIX='-aarch64';
        ;;
    *) echo >&2 "error: unsupported architecture: '$ARCH_NAME'"; exit 1 ;;
esac

SWIFT_WEBDIR="$SWIFT_WEBROOT/$SWIFT_BRANCH/$(echo $SWIFT_PLATFORM | tr -d .)$OS_ARCH_SUFFIX"
SWIFT_BIN_URL="$SWIFT_WEBDIR/$SWIFT_VERSION/$SWIFT_VERSION-$SWIFT_PLATFORM$OS_ARCH_SUFFIX.tar.gz"
SWIFT_SIG_URL="$SWIFT_BIN_URL.sig"

# - Download the GPG keys, Swift toolchain, and toolchain signature, and verify.
export GNUPGHOME="${WORK_DIR}"
curl -fsSL "$SWIFT_BIN_URL" -o swift.tar.gz "$SWIFT_SIG_URL" -o swift.tar.gz.sig
gpg --batch --quiet --keyserver keyserver.ubuntu.com --recv-keys "$SWIFT_SIGNING_KEY"
gpg --batch --verify swift.tar.gz.sig swift.tar.gz

# - Unpack the toolchain, set libs permissions, and clean up.
tar -xzf swift.tar.gz --directory / --strip-components=1
chmod -R o+r /usr/lib/swift

popd
rm -rf "${WORK_DIR}"
